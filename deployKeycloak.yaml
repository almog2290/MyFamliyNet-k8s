---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: my-family-net
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres-keycloak-svc 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:25.0.0
          args: ["start-dev"]
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: KEYCLOAK_USER
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: KEYCLOAK_PASSWORD
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_SCHEMA
              value: "public"
            - name: KC_DB_USER
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: POSTGRES_USER
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: POSTGRES_PASSWORD
            - name: KC_DB_URL
              value: "jdbc:postgresql://postgres-keycloak-svc.my-family-net.svc.cluster.local:5432/keycloak"
            - name: KC_PROXY
              value: "edge"
            - name: KC_FEATURES
              value: token-exchange,admin-fine-grained-authz
            - name: KC_LOG_LEVEL
              value: DEBUG
          ports:
            - name: http
              containerPort: 8080
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-svc
  namespace: my-family-net
  labels:
    app: keycloak-svc
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP